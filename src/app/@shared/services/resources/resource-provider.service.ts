import {Injectable} from '@angular/core';
import {environment} from '../../../../environments/environment';

/**
 * Provides static resources to be used through out the application.
 *
 * Static resources are the values which does not changes.
 * This also provides the values defined in the environment variables.
 *
 * This service provides static values including the API URL, Client Key, Client Secret, Grant Type, etc.
 */
@Injectable({
  providedIn: 'root'
})
export class ResourceProviderService {
  /**
   * API_URL. The URL generated by appending `api/` to the
   * endpoint URL from the environment variable.
   */
  private API_URL = `${environment.apiURL}`;

  /**
   * Client key is used for generating new access token or refresh token.
   */
  private CLIENT_KEY = environment.clientKey;

  /**
   * Client secret for the authentication of the application.
   * Should only be sent in POST data.
   */
  private CLIENT_SECRET = environment.clientSecret;

  /**
   * Custom user agent.
   */
  private USER_AGENT = '';

  /**
   * Grant type to be used while getting a new access token.
   */
  private GRANT_TYPE = 'password';

  /**
   * Grant type to be used while generating a new access token from the refresh token.
   */
  private GRANT_TYPE_REFRESH_TOKEN = 'refresh_token';

  /**
   * ResourceProviderService constructor
   */
  constructor() {}

  /**
   * Getter for API_URL
   * @return API endpoint URL
   */
  get url(): string {
    return this.API_URL;
  }

  /**
   * Getter for CLIENT_KEY
   * @return Client Key
   */
  get clientKey(): string {
    return this.CLIENT_KEY;
  }

  /**
   * Getter for CLIENT_SECRET
   * @return Client Secret
   */
  get clientSecret(): string {
    return this.CLIENT_SECRET;
  }

  /**
   * Getter for USER_AGENT
   * @return User agent
   */
  get userAgent(): string {
    return this.USER_AGENT;
  }

  /**
   * Getter for GRANT_TYPE
   * @return Grant type used for new login
   */
  get grantType(): string {
    return this.GRANT_TYPE;
  }

  /**
   * Getter for GRANT_TYPE_REFRESH_TOKEN
   * @return Grant type used for generating a new access token using the refresh token
   */
  get grantTypeRefreshToken(): string {
    return this.GRANT_TYPE_REFRESH_TOKEN;
  }
}
